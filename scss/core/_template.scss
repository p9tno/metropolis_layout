// Main wrappers =====================================

body {
	font-family: $main_font_family;
	font-size: calc(.05 * 100vw + 0px);

	@media (min-width: 768px) {
		font-size: calc(.008333334 * 100vw + 0px);
	}

	line-height: $main_line_height;

	background-color: $color_light_primary;
	color: $main_color;

}

.wrapper {
	display: flex;
	flex-direction: column;
	height: auto;
	min-height: 100%;

	font-size: $main_font_size;
}

/* Middle
 ----------------------------------------------------------------------------- */
.main_content {
	flex-grow: 1;

}

.container_center {
	max-width: $container_width;
	padding: 0 1.25em;
	margin-left: auto;
	margin-right: auto;
}

.section {
	padding: 1.875em 0;
	@media (min-width: 768px) {
		padding: 3.75em 0;
	}

	&:first-child {
		// padding-top: 6em;
	}

	&__title {
		margin: 0;

		font-family: $second_font_family;
		font-size: 3em;
		font-weight: 400;
		line-height: 1.1;
		letter-spacing: -0.05em;
		text-transform: uppercase;
		color: $second_color;

		@media (min-width: 768px) {
			font-size: 4.25em;
		}
	}
}

.desktop {
	@media (max-width: 767px) {
		display: none !important;
	}
}

.mobile {
	@media (min-width: 768px) {
		display: none !important;
	}
}

.d-none {
	display: none;
}

.d-block {
	display: block!important;
}

.bg {
	background-position: center;
	background-size: cover;
	background-repeat: no-repeat;
}

.img {
	img {
		display: block;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
}

.snakeline {
	a {
		position: relative;
		text-decoration: none;

		&:after {
			content: '';
			position: absolute;
			display: inline-block;
			width: 100%;
			left: 0;
			bottom: -0.125em;
			border-bottom: 0.125em solid;
			border-color: inherit;

			@media (min-width: 768px) {
				transition: width 0.3s;
			}
		}

		@media (min-width: 768px) {
			&:hover {
				&:after {
					width: 65%;
				}
			}
		}

	}
}

.list {
	margin: 0;
	padding: 0;
	list-style: none;
}

.counter-wrap {
	counter-reset: line var(--line-num, 0);
}

.counter-item {
	counter-increment: line;

	&:nth-child(n+10) {
		.counter-el {
			&:before {
				content: none;

			}
		}
	}

	.counter-el {
		&:before {
			content: '0';

		}

		&:after {
			content: counter(line) ' ';
		}

	}
}

// По счетчикам элементов с нулям впереди на будущее
// li:before {
//   counter-increment: li;
//   content: counter(item, decimal-leading-zero);
// }

// При чем есть варинаты через :nth-child(-n+9) сделать

// * {
// 	border: 1px solid #000;
// }
